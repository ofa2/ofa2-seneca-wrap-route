{"version":3,"file":"bundle.cjs.js","sources":["../src/index.js"],"sourcesContent":["import _ from 'lodash';\n\nfunction plainMsg(msg) {\n  return _.omit(msg, [\n    'cmd',\n    'action',\n    'role',\n    'transport$',\n    'id$',\n    'plugin$',\n    'fatal$',\n    'tx$',\n    'meta$',\n    'traceId',\n  ]);\n}\n\nfunction logRequest(type, level, msg) {\n  if (type === true) {\n    logger[level](msg.cmd);\n  }\n  else if (type === 'all') {\n    logger[level](msg);\n  }\n  else if (type === 'plain') {\n    logger[level](msg.cmd, plainMsg(msg));\n  }\n}\n\nfunction logResponse(start, type, level, msg, result) {\n  let ms = Date.now() - start;\n\n  if (result instanceof Errors.OperationalError) {\n    result.seneca = plainMsg(msg);\n    result.seneca.cmd = msg.cmd;\n    result.seneca.costMs = ms;\n    logger.warn(result);\n  }\n  else if (result instanceof Error) {\n    result.seneca = msg;\n    result.seneca.costMs = ms;\n    logger.error(result);\n  }\n  else if (type === true) {\n    logger[level](`done ${msg.cmd} -- ${ms}ms`);\n  }\n  else if (type === 'plain') {\n    logger[level](`done ${msg.cmd} -- ${ms}ms`, result);\n  }\n}\n\nfunction wrapRoute() {\n  if (!this.seneca) {\n    throw new Error('no seneca found');\n  }\n\n  this.seneca.plainMsg = plainMsg;\n\n  _.forEach(this.config.routes, (action, key) => {\n    let index = key.indexOf(' ');\n    let keyParts = [key.slice(0, index), key.slice(index + 1)];\n    let method = (keyParts[0] || '').toLowerCase();\n\n    if (!_.includes(['add', 'wrap'], method)) {\n      throw new Error(`invalid route method: ${method}`);\n    }\n\n    let actionParts = action.split('.');\n    let controllerName = actionParts[0];\n    let controller = this.controllers[controllerName];\n    if (!controller) {\n      throw new Error(`undefined controller: ${controllerName}`);\n    }\n\n    let actionMethodName = actionParts[1];\n    let actionMethod = controller[actionMethodName].bind(controller);\n    if (!actionMethod) {\n      throw new Error(`undefined action method: ${action}`);\n    }\n\n    let { requestLog, requestLogLevel = 'trace' } = this.config.seneca;\n    let { responseLog, responseLogLevel = 'trace' } = this.config.seneca;\n\n    controller[actionMethodName] = async function actionAsync(msg, done) {\n      let { traceId } = msg;\n      if (traceId) {\n        if (global.als) {\n          global.als.set('traceId', traceId);\n        }\n      }\n\n      const start = Date.now();\n      logRequest(requestLog, requestLogLevel, msg);\n\n      try {\n        let result = await actionMethod(msg);\n        logResponse(start, responseLog, responseLogLevel, msg, result);\n        return done(null, result);\n      }\n      catch (err) {\n        logResponse(start, responseLog, responseLogLevel, msg, err);\n\n        if (err instanceof Errors.OperationalError) {\n          return done(null, err.response());\n        }\n\n        return done(null, new Errors.Unknown().response());\n      }\n    };\n  });\n}\n\nexport default wrapRoute;\n"],"names":["plainMsg","msg","_","omit","logRequest","type","level","cmd","logResponse","start","result","ms","Date","now","Errors","OperationalError","seneca","costMs","warn","Error","error","wrapRoute","forEach","config","routes","action","key","index","indexOf","keyParts","slice","method","toLowerCase","includes","actionParts","split","controllerName","controller","controllers","actionMethodName","actionMethod","bind","actionAsync","done","traceId","global","als","set","requestLog","requestLogLevel","responseLog","responseLogLevel","err","response","Unknown"],"mappings":"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"}